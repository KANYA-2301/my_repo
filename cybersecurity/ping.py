# -*- coding: utf-8 -*-
"""Untitled35.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nCTlNnC4ric8_2JUjRffQJjdoCp98pwO
"""

import subprocess
import platform
import os
import socket
import datetime

def ping(host):
    """Ping a host and return the result."""
    command = ['ping', host, '-n', '1']
    try:
        output = subprocess.check_output(command, stderr=subprocess.STDOUT, universal_newlines=True)
        return True, output
    except subprocess.CalledProcessError as e:
        return False, e.output

def collect_sysinfo():
    """Collect system information."""
    sysinfo = {
        "Hostname": socket.gethostname(),
        "IP Address": socket.gethostbyname(socket.gethostname()),
        "OS": platform.system(),
        "OS Version": platform.version(),
        "Architecture": platform.architecture()[0],
        "Machine": platform.machine(),
        "Processor": platform.processor(),
        "Current Time": datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    }
    return sysinfo

def save_to_file(sysinfo, ping_result, filename):
    """Save system info and ping result to a text file."""
    with open(filename, 'w') as file:
        file.write("System Information:\n")
        for key, value in sysinfo.items():
            file.write(f"{key}: {value}\n")
        file.write("\nPing Result:\n")
        file.write(ping_result)

def main():
    host = input("Enter the host to ping (e.g., google.com): ")
    success, ping_output = ping(host)

    sysinfo = collect_sysinfo()

    # Prepare filename with timestamp
    filename = f"sysinfo_ping_{datetime.datetime.now().strftime('%Y%m%d_%H%M%S')}.txt"

    if success:
        print(f"Ping to {host} was successful.")
    else:
        print(f"Ping to {host} failed.")

    save_to_file(sysinfo, ping_output, filename)
    print(f"System info and ping result saved to {filename}")

if __name__ == "__main__":
    main()